import React, { useCallback, useState } from "react";
import { GoogleMap, useJsApiLoader, Marker } from "@react-google-maps/api";
import { useLoaderData } from "remix";
import gLogo from "~/images/home/g32.png";

const containerStyle = {
  width: "100%",
  height: "100vh",
};

const center = {
  lat: 40.7561,
  lng: -74.0035,
};

type CustomOptionsType = {
  mapTypeControl?: boolean;
  zoom?: number;
  clickableIcons?: boolean;
  panControl?: boolean;
  rotateControl?: boolean;
  scaleControl?: boolean;
  streetViewControl?: boolean;
  zoomControl?: boolean;
  fullscreenControl?: boolean;
  mapId?: string;
};

type MyMapProps = {
  customOptions?: CustomOptionsType;
};

const MyMap = (props: MyMapProps) => {
  const { customOptions } = props;
  const data = useLoaderData();
  const { GOOGLE_MAP_ID, GOOGLE_MAP_API_KEY } = data;
  const { isLoaded } = useJsApiLoader({
    id: "google-map-script",
    googleMapsApiKey: GOOGLE_MAP_API_KEY,
  });

  const [map, setMap] = useState(null);

  const onLoad = useCallback(function callback(map) {
    setMap(map);
  }, []);

  const onUnmount = useCallback(function callback(map) {
    setMap(null);
  }, []);

  const mapOptions = {
    mapTypeControl: false,
    zoom: 15,
    clickableIcons: false,
    panControl: false,
    rotateControl: false,
    scaleControl: false,
    streetViewControl: false,
    zoomControl: false,
    fullscreenControl: false,
    mapId: GOOGLE_MAP_ID,
  };

  const modifiedCustomOptions = { ...customOptions, mapId: GOOGLE_MAP_ID };
  const options = customOptions ? modifiedCustomOptions : mapOptions;
  const gText =
    "M 10.384 3.44 L 10.064 3.44 Q 9.552 2.032 8.312 1.16 A 4.782 4.782 0 0 0 6.046 0.324 A 6.101 6.101 0 0 0 5.376 0.288 Q 3.968 0.288 2.816 0.952 Q 1.664 1.616 1 2.856 A 5.547 5.547 0 0 0 0.415 4.659 A 7.244 7.244 0 0 0 0.336 5.744 A 6.921 6.921 0 0 0 0.492 7.245 A 5.398 5.398 0 0 0 1 8.632 Q 1.664 9.872 2.816 10.536 A 5.015 5.015 0 0 0 5.288 11.2 A 5.921 5.921 0 0 0 5.376 11.2 Q 6.752 11.2 7.896 10.56 Q 9.04 9.92 9.728 8.712 A 5.436 5.436 0 0 0 10.364 6.866 A 6.946 6.946 0 0 0 10.448 5.904 L 5.136 5.904 L 5.136 5.616 L 10.752 5.616 L 10.752 5.744 A 6.888 6.888 0 0 1 10.54 7.482 A 5.794 5.794 0 0 1 10.064 8.72 Q 9.376 10.032 8.152 10.76 A 5.212 5.212 0 0 1 5.806 11.474 A 6.339 6.339 0 0 1 5.376 11.488 A 5.661 5.661 0 0 1 3.649 11.232 A 5.032 5.032 0 0 1 2.6 10.76 Q 1.376 10.032 0.688 8.72 Q 0 7.408 0 5.744 A 6.888 6.888 0 0 1 0.212 4.006 A 5.794 5.794 0 0 1 0.688 2.768 Q 1.376 1.456 2.6 0.728 A 5.212 5.212 0 0 1 4.946 0.015 A 6.339 6.339 0 0 1 5.376 0 A 5.981 5.981 0 0 1 6.958 0.201 A 4.786 4.786 0 0 1 8.496 0.928 A 5.254 5.254 0 0 1 10.342 3.33 A 6.36 6.36 0 0 1 10.384 3.44 Z";
  const gregText =
    "M 10.384 3.44 L 10.064 3.44 Q 9.552 2.032 8.312 1.16 A 4.782 4.782 0 0 0 6.046 0.324 A 6.101 6.101 0 0 0 5.376 0.288 Q 3.968 0.288 2.816 0.952 Q 1.664 1.616 1 2.856 A 5.547 5.547 0 0 0 0.415 4.659 A 7.244 7.244 0 0 0 0.336 5.744 A 6.921 6.921 0 0 0 0.492 7.245 A 5.398 5.398 0 0 0 1 8.632 Q 1.664 9.872 2.816 10.536 A 5.015 5.015 0 0 0 5.288 11.2 A 5.921 5.921 0 0 0 5.376 11.2 Q 6.752 11.2 7.896 10.56 Q 9.04 9.92 9.728 8.712 A 5.436 5.436 0 0 0 10.364 6.866 A 6.946 6.946 0 0 0 10.448 5.904 L 5.136 5.904 L 5.136 5.616 L 10.752 5.616 L 10.752 5.744 A 6.888 6.888 0 0 1 10.54 7.482 A 5.794 5.794 0 0 1 10.064 8.72 Q 9.376 10.032 8.152 10.76 A 5.212 5.212 0 0 1 5.806 11.474 A 6.339 6.339 0 0 1 5.376 11.488 A 5.661 5.661 0 0 1 3.649 11.232 A 5.032 5.032 0 0 1 2.6 10.76 Q 1.376 10.032 0.688 8.72 Q 0 7.408 0 5.744 A 6.888 6.888 0 0 1 0.212 4.006 A 5.794 5.794 0 0 1 0.688 2.768 Q 1.376 1.456 2.6 0.728 A 5.212 5.212 0 0 1 4.946 0.015 A 6.339 6.339 0 0 1 5.376 0 A 5.981 5.981 0 0 1 6.958 0.201 A 4.786 4.786 0 0 1 8.496 0.928 A 5.254 5.254 0 0 1 10.342 3.33 A 6.36 6.36 0 0 1 10.384 3.44 Z M 36.24 5.328 L 36.24 2.72 L 36.544 2.72 L 36.544 11.68 A 4.611 4.611 0 0 1 36.428 12.737 A 3.628 3.628 0 0 1 36.016 13.768 Q 35.488 14.656 34.616 15.12 Q 33.744 15.584 32.72 15.584 A 5.322 5.322 0 0 1 31.545 15.461 A 3.776 3.776 0 0 1 30.12 14.824 A 3.816 3.816 0 0 1 28.716 12.809 A 4.702 4.702 0 0 1 28.704 12.768 L 29.024 12.768 Q 29.392 13.936 30.328 14.616 Q 31.233 15.274 32.625 15.295 A 6.125 6.125 0 0 0 32.72 15.296 Q 33.712 15.296 34.512 14.848 Q 35.312 14.4 35.776 13.584 A 3.525 3.525 0 0 0 36.195 12.334 A 4.565 4.565 0 0 0 36.24 11.68 L 36.24 8.736 Q 35.888 9.936 34.856 10.704 A 3.849 3.849 0 0 1 33.105 11.416 A 5.126 5.126 0 0 1 32.336 11.472 A 4.83 4.83 0 0 1 31.07 11.312 A 4.074 4.074 0 0 1 30.144 10.936 Q 29.184 10.4 28.656 9.4 A 4.457 4.457 0 0 1 28.215 8.086 A 6.005 6.005 0 0 1 28.128 7.04 A 5.906 5.906 0 0 1 28.237 5.882 A 4.408 4.408 0 0 1 28.656 4.68 Q 29.184 3.68 30.144 3.144 A 4.233 4.233 0 0 1 31.774 2.638 A 5.26 5.26 0 0 1 32.336 2.608 A 4.788 4.788 0 0 1 33.571 2.76 A 3.743 3.743 0 0 1 34.856 3.376 Q 35.888 4.144 36.24 5.328 Z M 25.888 8.432 L 26.208 8.432 Q 25.984 9.792 24.936 10.632 Q 23.888 11.472 22.24 11.472 A 4.668 4.668 0 0 1 20.971 11.305 A 4.01 4.01 0 0 1 20.096 10.944 Q 19.152 10.416 18.616 9.408 Q 18.08 8.4 18.08 7.04 A 5.815 5.815 0 0 1 18.198 5.843 A 4.412 4.412 0 0 1 18.616 4.672 A 3.803 3.803 0 0 1 19.572 3.492 A 3.646 3.646 0 0 1 20.096 3.136 A 4.168 4.168 0 0 1 21.763 2.63 A 5.126 5.126 0 0 1 22.24 2.608 A 4.975 4.975 0 0 1 23.276 2.711 A 3.652 3.652 0 0 1 24.4 3.144 A 3.78 3.78 0 0 1 25.329 3.913 A 3.396 3.396 0 0 1 25.752 4.528 Q 26.208 5.376 26.208 6.32 Q 26.208 6.761 26.199 7.033 A 7.23 7.23 0 0 1 26.192 7.184 L 18.4 7.184 Q 18.416 8.512 18.952 9.408 A 3.609 3.609 0 0 0 19.739 10.34 A 3.289 3.289 0 0 0 20.352 10.744 A 4.086 4.086 0 0 0 22.176 11.184 A 4.733 4.733 0 0 0 22.24 11.184 A 4.766 4.766 0 0 0 23.406 11.048 A 3.604 3.604 0 0 0 24.688 10.448 A 3.006 3.006 0 0 0 25.885 8.452 A 3.91 3.91 0 0 0 25.888 8.432 Z M 16.8 2.528 L 16.8 2.88 L 16.656 2.88 Q 15.296 2.88 14.344 3.672 A 2.43 2.43 0 0 0 13.608 4.767 Q 13.466 5.173 13.418 5.674 A 5.686 5.686 0 0 0 13.392 6.224 L 13.392 11.36 L 13.072 11.36 L 13.072 2.72 L 13.392 2.72 L 13.392 4.816 A 2.865 2.865 0 0 1 14.026 3.514 Q 14.9 2.528 16.8 2.528 Z M 36.24 7.04 Q 36.24 5.808 35.736 4.872 Q 35.232 3.936 34.344 3.416 A 3.821 3.821 0 0 0 32.63 2.905 A 4.636 4.636 0 0 0 32.336 2.896 A 4.757 4.757 0 0 0 31.295 3.005 A 3.655 3.655 0 0 0 30.28 3.392 Q 29.408 3.888 28.928 4.824 A 4.248 4.248 0 0 0 28.53 6.039 A 5.815 5.815 0 0 0 28.448 7.04 Q 28.448 8.32 28.928 9.256 Q 29.408 10.192 30.28 10.688 A 3.742 3.742 0 0 0 31.542 11.123 A 4.953 4.953 0 0 0 32.336 11.184 A 4.14 4.14 0 0 0 33.584 11.001 A 3.686 3.686 0 0 0 34.344 10.664 Q 35.232 10.144 35.736 9.208 A 4.187 4.187 0 0 0 36.188 7.799 A 5.397 5.397 0 0 0 36.24 7.04 Z M 18.4 6.896 L 25.92 6.896 A 5.919 5.919 0 0 0 25.931 6.542 Q 25.931 6.066 25.849 5.651 A 3.277 3.277 0 0 0 25.496 4.672 A 3.306 3.306 0 0 0 24.611 3.642 A 3.189 3.189 0 0 0 24.12 3.336 Q 23.248 2.896 22.24 2.896 Q 21.216 2.896 20.352 3.336 A 3.388 3.388 0 0 0 19.056 4.508 A 4.107 4.107 0 0 0 18.952 4.672 A 3.695 3.695 0 0 0 18.529 5.746 Q 18.423 6.208 18.404 6.742 A 6.532 6.532 0 0 0 18.4 6.896 Z";

  return isLoaded ? (
    <GoogleMap
      mapContainerStyle={containerStyle}
      center={center}
      options={options}
      onLoad={onLoad}
      onUnmount={onUnmount}>
      <Marker
        // icon={gLogo}
        icon={{
          path: gText,
          fillColor: "#0d47a1",
          fillOpacity: 0.9,
          scale: 1.5,
          strokeColor: "#0d47a1",
          strokeWeight: 2,
        }}
        animation={google.maps.Animation.DROP}
        position={center}
        title={`I'm from NYC!`}
      />
    </GoogleMap>
  ) : (
    <div className="defaultMapImg" aria-label="gregory location"></div>
  );
};

export default MyMap;
